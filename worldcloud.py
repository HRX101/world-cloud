{"cells":[{"metadata":{"trusted":true},"cell_type":"code","source":"!pip install wordcloud\n!pip install fileupload\n!pip install ipywidgets\n!jupyter nbextension install --py --user fileupload\n!jupyter nbextension enable --py fileupload\n\n\nimport wordcloud\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom IPython.display import display\nimport fileupload\nimport io\nimport sys","execution_count":1,"outputs":[{"output_type":"stream","text":"Collecting wordcloud\n  Downloading wordcloud-1.8.1-cp36-cp36m-manylinux1_x86_64.whl (366 kB)\n     |████████████████████████████████| 366 kB 4.8 MB/s            \n\u001b[?25hRequirement already satisfied: matplotlib in /srv/conda/envs/notebook/lib/python3.6/site-packages (from wordcloud) (3.3.4)\nRequirement already satisfied: pillow in /srv/conda/envs/notebook/lib/python3.6/site-packages (from wordcloud) (8.3.2)\nRequirement already satisfied: numpy>=1.6.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from wordcloud) (1.19.5)\nRequirement already satisfied: python-dateutil>=2.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib->wordcloud) (2.8.2)\nRequirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib->wordcloud) (3.0.6)\nRequirement already satisfied: kiwisolver>=1.0.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib->wordcloud) (1.3.1)\nRequirement already satisfied: cycler>=0.10 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib->wordcloud) (0.11.0)\nRequirement already satisfied: six>=1.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from python-dateutil>=2.1->matplotlib->wordcloud) (1.16.0)\nInstalling collected packages: wordcloud\nSuccessfully installed wordcloud-1.8.1\nCollecting fileupload\n  Downloading fileupload-0.1.5-py2.py3-none-any.whl (6.2 kB)\nRequirement already satisfied: ipywidgets>=5.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from fileupload) (7.6.3)\nRequirement already satisfied: notebook>=4.2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from fileupload) (6.3.0)\nRequirement already satisfied: traitlets>=4.2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from fileupload) (4.3.3)\nRequirement already satisfied: ipython>=4.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets>=5.1->fileupload) (7.16.1)\nRequirement already satisfied: widgetsnbextension~=3.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets>=5.1->fileupload) (3.5.1)\nRequirement already satisfied: jupyterlab-widgets>=1.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets>=5.1->fileupload) (1.0.2)\nRequirement already satisfied: ipykernel>=4.5.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets>=5.1->fileupload) (5.5.5)\nRequirement already satisfied: nbformat>=4.2.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets>=5.1->fileupload) (5.1.3)\nRequirement already satisfied: terminado>=0.8.3 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (0.12.1)\nRequirement already satisfied: Send2Trash>=1.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (1.8.0)\nRequirement already satisfied: jupyter-client>=5.3.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (7.1.0)\nRequirement already satisfied: argon2-cffi in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (21.1.0)\nRequirement already satisfied: nbconvert in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (6.0.7)\nRequirement already satisfied: jinja2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (3.0.3)\nRequirement already satisfied: pyzmq>=17 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (22.3.0)\nRequirement already satisfied: jupyter-core>=4.6.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (4.8.1)\nRequirement already satisfied: tornado>=6.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (6.1)\nRequirement already satisfied: ipython-genutils in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (0.2.0)\nRequirement already satisfied: prometheus-client in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.2->fileupload) (0.12.0)\nRequirement already satisfied: six in /srv/conda/envs/notebook/lib/python3.6/site-packages (from traitlets>=4.2->fileupload) (1.16.0)\nRequirement already satisfied: decorator in /srv/conda/envs/notebook/lib/python3.6/site-packages (from traitlets>=4.2->fileupload) (5.1.0)\nRequirement already satisfied: pickleshare in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (0.7.5)\nRequirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (3.0.24)\nRequirement already satisfied: pexpect in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (4.8.0)\nRequirement already satisfied: backcall in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (0.2.0)\nRequirement already satisfied: jedi>=0.10 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (0.17.2)\nRequirement already satisfied: pygments in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (2.10.0)\nRequirement already satisfied: setuptools>=18.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets>=5.1->fileupload) (58.0.4)\nRequirement already satisfied: entrypoints in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jupyter-client>=5.3.4->notebook>=4.2->fileupload) (0.3)\nRequirement already satisfied: nest-asyncio>=1.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jupyter-client>=5.3.4->notebook>=4.2->fileupload) (1.5.4)\nRequirement already satisfied: python-dateutil>=2.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jupyter-client>=5.3.4->notebook>=4.2->fileupload) (2.8.2)\nRequirement already satisfied: jsonschema!=2.5.0,>=2.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbformat>=4.2.0->ipywidgets>=5.1->fileupload) (4.1.2)\nRequirement already satisfied: ptyprocess in /srv/conda/envs/notebook/lib/python3.6/site-packages (from terminado>=0.8.3->notebook>=4.2->fileupload) (0.7.0)\nRequirement already satisfied: cffi>=1.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from argon2-cffi->notebook>=4.2->fileupload) (1.14.6)\nRequirement already satisfied: MarkupSafe>=2.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jinja2->notebook>=4.2->fileupload) (2.0.1)\nRequirement already satisfied: testpath in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (0.5.0)\nRequirement already satisfied: bleach in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (4.1.0)\nRequirement already satisfied: mistune<2,>=0.8.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (0.8.4)\nRequirement already satisfied: defusedxml in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (0.7.1)\nRequirement already satisfied: jupyterlab-pygments in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (0.1.2)\nRequirement already satisfied: pandocfilters>=1.4.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (1.5.0)\nRequirement already satisfied: nbclient<0.6.0,>=0.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.2->fileupload) (0.5.9)\nRequirement already satisfied: pycparser in /srv/conda/envs/notebook/lib/python3.6/site-packages (from cffi>=1.0.0->argon2-cffi->notebook>=4.2->fileupload) (2.21)\nRequirement already satisfied: parso<0.8.0,>=0.7.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jedi>=0.10->ipython>=4.0.0->ipywidgets>=5.1->fileupload) (0.7.1)\nRequirement already satisfied: attrs>=17.4.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets>=5.1->fileupload) (21.2.0)\nRequirement already satisfied: importlib-metadata in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets>=5.1->fileupload) (4.8.1)\nRequirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets>=5.1->fileupload) (0.17.3)\n","name":"stdout"},{"output_type":"stream","text":"Requirement already satisfied: async-generator in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbclient<0.6.0,>=0.5.0->nbconvert->notebook>=4.2->fileupload) (1.10)\nRequirement already satisfied: wcwidth in /srv/conda/envs/notebook/lib/python3.6/site-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets>=5.1->fileupload) (0.2.5)\nRequirement already satisfied: packaging in /srv/conda/envs/notebook/lib/python3.6/site-packages (from bleach->nbconvert->notebook>=4.2->fileupload) (21.3)\nRequirement already satisfied: webencodings in /srv/conda/envs/notebook/lib/python3.6/site-packages (from bleach->nbconvert->notebook>=4.2->fileupload) (0.5.1)\nRequirement already satisfied: typing-extensions>=3.6.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from importlib-metadata->jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets>=5.1->fileupload) (4.0.1)\nRequirement already satisfied: zipp>=0.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from importlib-metadata->jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets>=5.1->fileupload) (3.6.0)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from packaging->bleach->nbconvert->notebook>=4.2->fileupload) (3.0.6)\nInstalling collected packages: fileupload\nSuccessfully installed fileupload-0.1.5\nRequirement already satisfied: ipywidgets in /srv/conda/envs/notebook/lib/python3.6/site-packages (7.6.3)\nRequirement already satisfied: traitlets>=4.3.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets) (4.3.3)\nRequirement already satisfied: nbformat>=4.2.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets) (5.1.3)\nRequirement already satisfied: ipykernel>=4.5.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets) (5.5.5)\nRequirement already satisfied: jupyterlab-widgets>=1.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets) (1.0.2)\nRequirement already satisfied: widgetsnbextension~=3.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets) (3.5.1)\nRequirement already satisfied: ipython>=4.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipywidgets) (7.16.1)\nRequirement already satisfied: jupyter-client in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipykernel>=4.5.1->ipywidgets) (7.1.0)\nRequirement already satisfied: tornado>=4.2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipykernel>=4.5.1->ipywidgets) (6.1)\nRequirement already satisfied: jedi>=0.10 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (0.17.2)\nRequirement already satisfied: backcall in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (0.2.0)\nRequirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (3.0.24)\nRequirement already satisfied: pickleshare in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (0.7.5)\nRequirement already satisfied: decorator in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (5.1.0)\nRequirement already satisfied: pygments in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (2.10.0)\nRequirement already satisfied: pexpect in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (4.8.0)\nRequirement already satisfied: setuptools>=18.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from ipython>=4.0.0->ipywidgets) (58.0.4)\nRequirement already satisfied: jsonschema!=2.5.0,>=2.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbformat>=4.2.0->ipywidgets) (4.1.2)\nRequirement already satisfied: ipython-genutils in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbformat>=4.2.0->ipywidgets) (0.2.0)\nRequirement already satisfied: jupyter-core in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbformat>=4.2.0->ipywidgets) (4.8.1)\nRequirement already satisfied: six in /srv/conda/envs/notebook/lib/python3.6/site-packages (from traitlets>=4.3.1->ipywidgets) (1.16.0)\nRequirement already satisfied: notebook>=4.4.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from widgetsnbextension~=3.5.0->ipywidgets) (6.3.0)\nRequirement already satisfied: parso<0.8.0,>=0.7.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jedi>=0.10->ipython>=4.0.0->ipywidgets) (0.7.1)\nRequirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets) (0.17.3)\nRequirement already satisfied: importlib-metadata in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets) (4.8.1)\nRequirement already satisfied: attrs>=17.4.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets) (21.2.0)\nRequirement already satisfied: nbconvert in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (6.0.7)\nRequirement already satisfied: argon2-cffi in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (21.1.0)\nRequirement already satisfied: Send2Trash>=1.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (1.8.0)\nRequirement already satisfied: terminado>=0.8.3 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.12.1)\nRequirement already satisfied: jinja2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (3.0.3)\nRequirement already satisfied: pyzmq>=17 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (22.3.0)\nRequirement already satisfied: prometheus-client in /srv/conda/envs/notebook/lib/python3.6/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.12.0)\nRequirement already satisfied: entrypoints in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets) (0.3)\nRequirement already satisfied: python-dateutil>=2.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets) (2.8.2)\nRequirement already satisfied: nest-asyncio>=1.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets) (1.5.4)\nRequirement already satisfied: wcwidth in /srv/conda/envs/notebook/lib/python3.6/site-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets) (0.2.5)\nRequirement already satisfied: ptyprocess>=0.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from pexpect->ipython>=4.0.0->ipywidgets) (0.7.0)\nRequirement already satisfied: cffi>=1.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (1.14.6)\nRequirement already satisfied: typing-extensions>=3.6.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from importlib-metadata->jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets) (4.0.1)\nRequirement already satisfied: zipp>=0.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from importlib-metadata->jsonschema!=2.5.0,>=2.4->nbformat>=4.2.0->ipywidgets) (3.6.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jinja2->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (2.0.1)\nRequirement already satisfied: bleach in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (4.1.0)\nRequirement already satisfied: defusedxml in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.7.1)\nRequirement already satisfied: jupyterlab-pygments in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.1.2)\nRequirement already satisfied: testpath in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.5.0)\nRequirement already satisfied: mistune<2,>=0.8.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.8.4)\nRequirement already satisfied: pandocfilters>=1.4.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (1.5.0)\nRequirement already satisfied: nbclient<0.6.0,>=0.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.5.9)\nRequirement already satisfied: pycparser in /srv/conda/envs/notebook/lib/python3.6/site-packages (from cffi>=1.0.0->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (2.21)\n","name":"stdout"},{"output_type":"stream","text":"Requirement already satisfied: async-generator in /srv/conda/envs/notebook/lib/python3.6/site-packages (from nbclient<0.6.0,>=0.5.0->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (1.10)\nRequirement already satisfied: packaging in /srv/conda/envs/notebook/lib/python3.6/site-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (21.3)\nRequirement already satisfied: webencodings in /srv/conda/envs/notebook/lib/python3.6/site-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.5.1)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from packaging->bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (3.0.6)\nInstalling /srv/conda/envs/notebook/lib/python3.6/site-packages/fileupload/static -> fileupload\nMaking directory: /home/jovyan/.local/share/jupyter/nbextensions/fileupload/\nCopying: /srv/conda/envs/notebook/lib/python3.6/site-packages/fileupload/static/extension.js -> /home/jovyan/.local/share/jupyter/nbextensions/fileupload/extension.js\nCopying: /srv/conda/envs/notebook/lib/python3.6/site-packages/fileupload/static/widget.js -> /home/jovyan/.local/share/jupyter/nbextensions/fileupload/widget.js\nMaking directory: /home/jovyan/.local/share/jupyter/nbextensions/fileupload/fileupload\nCopying: /srv/conda/envs/notebook/lib/python3.6/site-packages/fileupload/static/fileupload/widget.js -> /home/jovyan/.local/share/jupyter/nbextensions/fileupload/fileupload/widget.js\n- Validating: \u001b[32mOK\u001b[0m\n\n    To initialize this nbextension in the browser every time the notebook (or other app) loads:\n    \n          jupyter nbextension enable fileupload --user --py\n    \nEnabling notebook extension fileupload/extension...\n      - Validating: \u001b[32mOK\u001b[0m\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def calculate_frequencies(file_contents):\n    # Here is a list of punctuations and uninteresting words you can use to process your text\n    punctuations = '''!()-[]{};:'\"\\,<>./?@#$%^&*_~'''\n    uninteresting_words = [\"the\", \"a\", \"to\", \"if\", \"is\", \"it\", \"of\", \"and\", \"or\", \"an\", \"as\", \"i\", \"me\", \"my\", \\\n    \"we\", \"our\", \"ours\", \"you\", \"your\", \"yours\", \"he\", \"she\", \"him\", \"his\", \"her\", \"hers\", \"its\", \"they\", \"them\", \\\n    \"their\", \"what\", \"which\", \"who\", \"whom\", \"this\", \"that\", \"am\", \"are\", \"was\", \"were\", \"be\", \"been\", \"being\", \\\n    \"have\", \"has\", \"had\", \"do\", \"does\", \"did\", \"but\", \"at\", \"by\", \"with\", \"from\", \"here\", \"when\", \"where\", \"how\", \\\n    \"all\", \"any\", \"both\", \"each\", \"few\", \"more\", \"some\", \"such\", \"no\", \"nor\", \"too\", \"very\", \"can\", \"will\", \"just\",\"\"]\n    # LEARNER CODE START HERe\n    file_contents=file_contents.lower()\n    result={}\n    p1=file_contents.split()\n    for i in p1:\n        if (i not in result):\n            if((i.isalpha()==True)and (i not in uninteresting_words)):\n                result[i]=1\n            else:\n                m=\"\"\n                for j in i:\n                    if(j not in punctuations):\n                        m=m+j\n                if((m not in result)and(m not in uninteresting_words)):\n                    result[m]=1\n                \n                elif((m not in uninteresting_words)and(m in result)):\n                    result[m]+=1\n        else:\n            result[i]+=1\n        frequencies=result\n        \n        \n    \n    #wordcloud\n    cloud = wordcloud.WordCloud()\n    cloud.generate_from_frequencies(frequencies)\n    return cloud.to_array()","execution_count":2,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"file_contents=\"It was a large room with endless row of bottles upon tiers of shelves lining its walls. Several long tables stood about, and Tubby saw they were crowded with curious apparatus—little tubes in racks, microscopes, triangular pieces of glass with candles behind them, and several contrivances of wheels and weights that looked like clock works. In the exact center of the room was one larger apparatus of a sort Tubby had never seen before; it seemed very complicated and he stared at it with awe. He could make nothing out of it except that part of it was a huge telescope, extending up through the skylight of the room. He glanced upward, and there, through a narrow, open slit in the glass, he could see the stars shining.\"\nmyimage = calculate_frequencies(file_contents)\nplt.imshow(myimage, interpolation = 'nearest')\nplt.axis('off')\nplt.show()","execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.6.15","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":5}